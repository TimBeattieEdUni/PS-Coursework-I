Still to do, in order of priority
	Test what we're going to submit - unpack, make, and run on a fresh new copy.
	Introduction to say how to unpack the tarball and build the project.
	Graphs of performance - must include definitions of terms or formulas to define them.
	Performance text should "justify choice of metrics when investigating performance."
	Ensure all code is tested - make sure #included in UnitTest.hpp.
	Text about design of application.
	Text about implementation.
	Reduce detail in timing output - nanoseconds aren't useful.
	Explanation of .ppm files - scaling of values and what each color represents.
	Fix scaling factor - apply densities between 0 and 5 and make scaling 10
	Contribution questionnaire.
	Text about compiler warning flags.
	Remove unused constructors and assignment operators.
	Remove unused constructors and assignment operators.
	Performance text: timing runs were piped to file, which may have improved speed.
	Add link to GitHub project to report.
	Text about Doxygen why everything is commented even if obvious.  Where to put this?
	Mention astyle for code clean-up.
	Investigation with north pumas and south hares - shows border between them blurring.
	Investigation on island - what density of hares allows pumas to survive?
	Ability to set up initial population densities.
	Investigation with packs of pumas.
	Test performance as land/water ratio changes.
	Test performance as land varies from one continent to many small islands - branch prediction should be killed by this.
	Further investigations island with ithsmus between large areas of pumas on one side and hares on the other
	Further investigation: diffusion rates set to 0.
	Write up landscape generation tool.
	Test population averager handles all water/zero population
	Text about Landscape swapping its arrays - made its interface easy to use "wrong".
	Should "Figures" directory be in report or in scratch?
